import React, { useState, useEffect } from 'react'
import SelectedMenuCard from '../../Components/SelectedMenu/SelectedMenuCard';
import SelectedMenuCardApi from './../../Apis/SelectedMenuCardApi';

const CardShowing = () => {
    // api
    const [loading, setLoading] = useState(true)
    const [data, setData] = useState(SelectedMenuCardApi)
    const [itemsTitle, SetItemsTitle] = useState('')
    useEffect(() => {
        setData(SelectedMenuCardApi)
        setLoading(false)

    }, [])
    // filterfunction
    const filterResult = (cardItem) => {
        SetItemsTitle(cardItem)
        const updatedItems = SelectedMenuCardApi.filter((elem) => {
            return elem.karjokrom === cardItem;
        })
        setData(updatedItems)
    }

    // filtering
    const filtering = (currentElem) => {
        const updatedItem = SelectedMenuCardApi.filter((elem) => {
            return elem.montronaloy === currentElem
        })
        setData(updatedItem)
    }


    // filterWithOpenEnd 
    const filterWithOpenEnd = (curentElem) => {
        const updatedItem = SelectedMenuCardApi.filter((curelem) => {
            return curelem.sheti === curentElem
        })
        setData(updatedItem)
    }

    // Search Filter
    const [search, setSearchData] = useState('')
    const handleinput = (e) => {
        setSearchData(e.target.value)
    }


    return (
        <>
            <div className='mb-10'>
                {/* selected Card */}
                <div className='grid lg:grid-cols-7 gap-4 px-4 py-6' style={{ background: "#1D3A7C" }}>
                    {/* =========‡¶Æ‡¶®‡ßç‡¶§‡¶®‡¶æ‡¶≤‡ßü /‡¶¨‡¶ø‡¶≠‡¶æ‡¶ó  =======*/}
                    <div>
                        <label htmlFor="countries" className="block mb-2 font-medium text-white lg:text-center text-md">‡¶Æ‡¶®‡ßç‡¶§‡ßç‡¶∞‡¶£‡¶æ‡¶≤‡¶Ø‡¶º / ‡¶¨‡¶ø‡¶≠‡¶æ‡¶ó:</label>
                        <select id="countries" className="overflow-y-scroll bg-cyan-500 rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 px-4 mt-2 ">
                            <option onClick={() => setData(SelectedMenuCardApi)}>‡¶∏‡¶¨</option>
                            <option onClick={() => filtering("‡¶ï‡ßÉ‡¶∑‡¶ø ‡¶Æ‡¶®‡ßç‡¶§‡ßç‡¶∞‡¶£‡¶æ‡¶≤‡¶Ø‡¶º")}>‡¶ï‡ßÉ‡¶∑‡¶ø ‡¶Æ‡¶®‡ßç‡¶§‡ßç‡¶∞‡¶£‡¶æ‡¶≤‡¶Ø‡¶º</option>
                            <option onClick={() => filtering("‡¶§‡¶•‡ßç‡¶Ø ‡¶ì ‡¶Ø‡ßã‡¶ó‡¶æ‡¶Ø‡ßá‡¶æ‡¶ó ‡¶™‡ßç‡¶∞‡¶Ø‡ßÅ‡¶ï‡ßç‡¶§‡¶ø ‡¶¨‡¶ø‡¶≠‡¶æ‡¶ó")}>‡¶§‡¶•‡ßç‡¶Ø ‡¶ì ‡¶Ø‡ßã‡¶ó‡¶æ‡¶Ø‡ßá‡¶æ‡¶ó ‡¶™‡ßç‡¶∞‡¶Ø‡ßÅ‡¶ï‡ßç‡¶§‡¶ø ‡¶¨‡¶ø‡¶≠‡¶æ‡¶ó</option>
                            <option onClick={() => filtering("‡¶ï‡¶æ‡¶∞‡¶ø‡¶ó‡¶∞‡¶ø ‡¶ì ‡¶Æ‡¶æ‡¶¶‡ßç‡¶∞‡¶æ‡¶∏‡¶æ ‡¶¨‡¶ø‡¶≠‡¶æ‡¶ó")}>‡¶ï‡¶æ‡¶∞‡¶ø‡¶ó‡¶∞‡¶ø ‡¶ì ‡¶Æ‡¶æ‡¶¶‡ßç‡¶∞‡¶æ‡¶∏‡¶æ ‡¶¨‡¶ø‡¶≠‡¶æ‡¶ó</option>
                            <option onClick={() => filtering("‡¶∏‡ßç‡¶•‡¶æ‡¶®‡ßÄ‡ßü ‡¶∏‡¶∞‡¶ï‡¶æ‡¶∞ ‡¶¨‡¶ø‡¶≠‡¶æ‡¶ó")}>‡¶∏‡ßç‡¶•‡¶æ‡¶®‡ßÄ‡ßü ‡¶∏‡¶∞‡¶ï‡¶æ‡¶∞ ‡¶¨‡¶ø‡¶≠‡¶æ‡¶ó</option>
                            <option onClick={() => filtering("‡¶™‡¶≤‡ßç‡¶≤‡¶ø‡¶â‡¶®‡ßç‡¶®‡ßü‡¶® ‡¶ì ‡¶∏‡¶®‡¶¨‡¶æ‡ßü ‡¶¨‡¶ø‡¶≠‡¶æ‡¶ó")}>‡¶™‡¶≤‡ßç‡¶≤‡¶ø‡¶â‡¶®‡ßç‡¶®‡ßü‡¶® ‡¶ì ‡¶∏‡¶®‡¶¨‡¶æ‡ßü ‡¶¨‡¶ø‡¶≠‡¶æ‡¶ó</option>
                            <option onClick={() => filtering("‡¶°‡¶æ‡¶ï ‡¶ì ‡¶ü‡ßá‡¶≤‡¶ø‡¶Ø‡ßã‡¶ó‡¶æ‡¶Ø‡ßã‡¶ó ‡¶¨‡¶ø‡¶≠‡¶æ‡¶ó")}>‡¶°‡¶æ‡¶ï ‡¶ì ‡¶ü‡ßá‡¶≤‡¶ø‡¶Ø‡ßã‡¶ó‡¶æ‡¶Ø‡ßã‡¶ó ‡¶¨‡¶ø‡¶≠‡¶æ‡¶ó</option>
                            <option onClick={() => filtering("‡¶∏‡¶æ‡¶∏‡ßç‡¶•‡ßç‡¶Ø ‡¶∏‡ßá‡¶¨‡¶æ ‡¶¨‡¶ø‡¶≠‡¶æ‡¶ó")}>‡¶∏‡¶æ‡¶∏‡ßç‡¶•‡ßç‡¶Ø ‡¶∏‡ßá‡¶¨‡¶æ ‡¶¨‡¶ø‡¶≠‡¶æ‡¶ó</option>
                            <option onClick={() => filtering("‡¶™‡ßç‡¶∞‡¶æ‡¶•‡¶Æ‡¶ø‡¶ï ‡¶ì ‡¶ó‡¶®‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ ‡¶Æ‡¶®‡ßç‡¶§‡ßç‡¶∞‡¶£‡¶æ‡¶≤‡¶Ø‡¶º")}>‡¶™‡ßç‡¶∞‡¶æ‡¶•‡¶Æ‡¶ø‡¶ï ‡¶ì ‡¶ó‡¶®‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ ‡¶Æ‡¶®‡ßç‡¶§‡ßç‡¶∞‡¶£‡¶æ‡¶≤‡¶Ø‡¶º</option>
                            <option onClick={() => filtering("‡¶ï‡ßÉ‡¶∑‡¶ø ‡¶Æ‡¶®‡ßç‡¶§‡ßç‡¶∞‡¶£‡¶æ‡¶≤‡¶Ø‡¶º")}>‡¶Æ‡¶æ‡¶ß‡ßç‡¶Ø‡¶Æ‡¶ø‡¶ï ‡¶ì ‡¶â‡¶ö‡ßç‡¶ö‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ ‡¶¨‡¶ø‡¶≠‡¶æ‡¶ó</option>
                            <option onClick={() => filtering("‡¶Æ‡¶æ‡¶ß‡ßç‡¶Ø‡¶Æ‡¶ø‡¶ï ‡¶ì ‡¶â‡¶ö‡ßç‡¶ö‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ ‡¶¨‡¶ø‡¶≠‡¶æ‡¶ó")}>‡¶ñ‡¶æ‡¶¶‡ßç‡¶Ø ‡¶Æ‡¶®‡ßç‡¶§‡ßç‡¶∞‡¶£‡¶æ‡¶≤‡¶Ø‡¶º</option>
                            <option onClick={() => filtering("‡¶∏‡¶Æ‡¶æ‡¶ú ‡¶ï‡¶≤‡ßç‡¶Ø‡¶æ‡¶£ ‡¶Æ‡¶®‡ßç‡¶§‡ßç‡¶∞‡¶£‡¶æ‡¶≤‡¶Ø‡¶º")}>‡¶∏‡¶Æ‡¶æ‡¶ú ‡¶ï‡¶≤‡ßç‡¶Ø‡¶æ‡¶£ ‡¶Æ‡¶®‡ßç‡¶§‡ßç‡¶∞‡¶£‡¶æ‡¶≤‡¶Ø‡¶º</option>
                            <option onClick={() => filtering("‡¶ö‡¶ø‡¶ï‡¶ø‡ßé‡¶∏‡¶æ ‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ ‡¶ì ‡¶™‡¶∞‡¶ø‡¶¨‡¶æ‡¶∞ ‡¶ï‡¶≤‡ßç‡¶Ø‡¶æ‡¶£ ‡¶¨‡¶ø‡¶≠‡¶æ‡¶ó")}>‡¶ö‡¶ø‡¶ï‡¶ø‡ßé‡¶∏‡¶æ ‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ ‡¶ì ‡¶™‡¶∞‡¶ø‡¶¨‡¶æ‡¶∞ ‡¶ï‡¶≤‡ßç‡¶Ø‡¶æ‡¶£ ‡¶¨‡¶ø‡¶≠‡¶æ‡¶ó</option>
                        </select>
                    </div>
                    {/* ============ ‡¶ï‡¶æ‡¶∞‡ßç‡¶Ø‡¶ï‡¶Æ ======= */}
                    <div>
                        <label htmlFor="countries" className="block mb-2 font-medium text-white lg:text-center text-md">‡¶ï‡¶æ‡¶Ø‡¶∞‡ßç‡¶ï‡¶Æ</label>
                        <select id="countries" className="overflow-y-scroll bg-orange-600 rounded-lg  block w-full p-2.5 px-4 mt-2 ">
                            <option onClick={() => filterResult("‡¶ú‡¶®‡¶§‡¶æ‡¶∞ ‡¶ï‡¶•‡¶æ")}>
                                ‡¶ú‡¶®‡¶§‡¶æ‡¶∞ ‡¶ï‡¶•‡¶æ
                            </option>
                            <option value="/cetagory/1" onClick={() => filterResult("‡¶ö‡¶≤‡ßÅ‡¶® ‡¶ï‡¶∞‡¶ø")}> ‡¶ö‡¶≤‡ßÅ‡¶® ‡¶ï‡¶∞‡¶ø</option>
                            <option value="/cetagory/2" onClick={() => filterResult("‡¶Æ‡ßÅ‡¶ï‡ßç‡¶§ ‡¶∏‡¶≠‡¶æ")}>‡¶Æ‡ßÅ‡¶ï‡ßç‡¶§ ‡¶∏‡¶≠‡¶æ</option>
                            <option value="/cetagory/3" onClick={() => filterResult("‡¶Æ‡¶§ ‡¶™‡ßç‡¶∞‡¶ï‡¶æ‡¶∂")}>‡¶Æ‡¶§ ‡¶™‡ßç‡¶∞‡¶ï‡¶æ‡¶∂</option>
                            <option value="/cetagory/4" onClick={() => filterResult("‡¶∏‡ßÉ‡¶ú‡¶®‡¶∂‡ßÄ‡¶≤ ‡¶ï‡¶£‡¶æ‡¶∞")}>‡¶∏‡ßÉ‡¶ú‡¶®‡¶∂‡ßÄ‡¶≤ ‡¶ï‡¶£‡¶æ‡¶∞</option>
                            <option value="/cetagory/5" onClick={() => filterResult("‡¶Ü‡¶Æ‡¶æ‡¶¶‡ßá‡¶∞ ‡¶¨‡ßç‡¶≤‡¶ó")}>‡¶Ü‡¶Æ‡¶æ‡¶¶‡ßá‡¶∞ ‡¶¨‡ßç‡¶≤‡¶ó</option>
                            <option value="/cetagory/6" onClick={() => filterResult("‡¶ö‡¶≤‡ßÅ‡¶® ‡¶ï‡¶•‡¶æ ‡¶¨‡¶≤‡¶ø")}>‡¶ö‡¶≤‡ßÅ‡¶® ‡¶ï‡¶•‡¶æ ‡¶¨‡¶≤‡¶ø</option>
                            <option value="/cetagory/7" onClick={() => filterResult("‡¶∏‡¶æ‡¶∏‡ßç‡¶•‡ßç‡¶Ø ‡¶∏‡ßá‡¶¨‡¶æ ‡¶¨‡¶ø‡¶≠‡¶æ‡¶ó")}>‡¶∏‡¶æ‡¶∏‡ßç‡¶•‡ßç‡¶Ø ‡¶∏‡ßá‡¶¨‡¶æ ‡¶¨‡¶ø‡¶≠‡¶æ‡¶ó</option>
                            <option value="/cetagory/8" onClick={() => filterResult("‡¶ó‡¶®‡¶Æ‡¶æ‡¶ß‡ßç‡¶Ø‡¶Æ")}>‡¶ó‡¶®‡¶Æ‡¶æ‡¶ß‡ßç‡¶Ø‡¶Æ</option>
                        </select>
                    </div>

                    {/* ============ üòò ‡¶∏‡ßÉ‡¶§‡¶ø ============== */}
                    <div>
                        <label htmlFor="countries" className="block mb-2 font-medium text-white lg:text-center text-md">‡¶∏‡ßç‡¶•‡¶ø‡¶§‡¶ø</label>
                        <select id="countries" className="bg-white rounded-lg  block w-full p-2.5 px-4 mt-2 ">
                            <option onClick={() => setData(SelectedMenuCardApi)}>‡¶∏‡¶¨</option>
                            <option onClick={() => filterWithOpenEnd("‡¶ö‡¶æ‡¶≤‡ßÅ")}>‡¶ö‡¶æ‡¶≤‡ßÅ</option>
                            <option onClick={() => filterWithOpenEnd("‡¶∏‡¶Æ‡¶æ‡¶™‡ßç‡¶§")}>‡¶∏‡¶Æ‡¶æ‡¶™‡ßç‡¶§</option>
                        </select>
                    </div>

                    {/* ============ üòò Start Date ============== */}
                    <div className='lg:text-center text-white'>
                        <label htmlFor="datepicker ">‡¶§‡¶æ‡¶∞‡¶ø‡¶ñ ‡¶π‡¶§‡ßá : </label>
                        <div className="relative mt-2">
                            <div className="flex absolute inset-y-0 left-0 items-center pl-3 pointer-events-none">
                                <svg className="w-5 h-5 text-black " fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fillRule="evenodd" d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z" clipRule="evenodd"></path></svg>
                            </div>
                            <input type="date" className="bg-gray-50 text-sm block w-full pl-10 p-3 text-gray-800 rounded-md datepicker-input" placeholder="Select stating date" />
                        </div>
                    </div>

                    {/* ============ üòò End Date ============== */}
                    <div className='lg:text-center text-white'>
                        <label htmlFor="datepicker ">‡¶§‡¶æ‡¶∞‡¶ø‡¶ñ ‡¶™‡¶Ø‡¶®‡ßç‡¶§ : </label>
                        <div className="relative mt-2">
                            <div className="flex absolute inset-y-0 left-0 items-center pl-3 pointer-events-none">
                                <svg className="w-5 h-5 text-black " fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fillRule="evenodd" d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z" clipRule="evenodd"></path></svg>
                            </div>
                            <input type="date" className="bg-gray-50 text-sm block w-full pl-10 p-3 text-gray-800 rounded-md datepicker-input" placeholder="Select end date" />
                        </div>
                    </div>

                    {/* ============ üòò search bar ============== */}
                    <div className='lg:text-center text-white'>
                        <label htmlFor="datepicker ">‡¶Ö‡¶®‡ßÅ‡¶∏‡¶®‡ßç‡¶ß‡¶æ‡¶® : </label>
                        <input type="search" value={search} onChange={handleinput} className="bg-gray-50 text-sm block w-full pl-10 p-3 mt-2 text-gray-800 rounded-md outline-none " placeholder="‡¶Ö‡¶®‡ßÅ‡¶∏‡¶®‡ßç‡¶ß‡¶æ‡¶® ‡¶ï‡¶∞" />
                    </div>

                    {/* ============ üòò ‡¶ï‡¶Æ‡¶æ‡¶®‡ßÅ‡¶∏‡¶æ‡¶∞‡ßá bar ============== */}
                    <div>
                        <label htmlFor="countries" className="block mb-2 font-medium text-white lg:text-center text-md">‡¶ï‡ßç‡¶∞‡¶Æ‡¶æ‡¶®‡ßÅ‡¶∏‡¶æ‡¶∞‡ßá : </label>
                        <select id="countries" className="bg-white rounded-lg  block w-full p-2.5 px-4 mt-2 ">
                            <option>‡¶∏‡¶∞‡ßç‡¶¨‡¶∂‡ßá‡¶∑</option>
                            <option>‡¶∏‡¶¨‡¶ö‡ßá‡ßü‡ßá ‡¶™‡ßÅ‡¶∞‡¶®‡ßã</option>
                            <option>‡¶∏‡¶¨‡¶æ‡¶ß‡¶ø‡¶ï ‡¶Æ‡¶®‡ßç‡¶§‡¶¨‡ßç‡¶Ø ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá</option>
                        </select>
                    </div>

                </div>

                {/* end Selected car */}
                <div className='my-2 lg:px-10'>
                    <div className='px-4'>
                        <h1 className='lg:text-2xl text-xl my-4 font-semibold '><span className='text-indigo-900 text-3xl'>
                            {itemsTitle ? itemsTitle : "‡¶ú‡¶®‡¶§‡¶æ‡¶∞ ‡¶ï‡¶•‡¶æ"}   </span>‡¶ó‡¶£‡¶™‡ßç‡¶∞‡¶ú‡¶æ‡¶§‡¶®‡ßç‡¶§‡ßç‡¶∞‡ßÄ ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ‡¶¶‡ßá‡¶∂ ‡¶∏‡¶∞‡¶ï‡¶æ‡¶∞‡ßá‡¶∞ ‡¶Ö‡¶ß‡ßÄ‡¶®‡ßá</h1>
                    </div>
                    {
                        loading ? <h1>Loading Data</h1> : <>
                            <div className=' grid lg:grid-cols-3 sm:grid-cols-2 xm:grid-cols-1 gap-6 mt-10'>
                                {
                                    data.map(({ id, image, title, subtitle, date }) => {
                                        return (
                                            <>
                                                <SelectedMenuCard id={id} image={image} title={title} date={date} subtitle={subtitle} />
                                            </>
                                        )
                                    })

                                }
                            </div>
                        </>
                    }

                </div>
            </div>
        </>
    )
}

export default CardShowing